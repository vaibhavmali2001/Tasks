package com.ArrayList;

import java.util.Arrays;

public class ArrayList<T> {
	private int defaultCapacity=10;
	private Object[] elements;
	private int size;
	
	public ArrayList() {
		this.elements = new Object[defaultCapacity];
		this.size = 0;
	}
	
	public ArrayList(int initialCapacity) {
		if(initialCapacity<0)
		{
			System.out.println("Wrong Capacity!!!");
		}
		this.elements=new Object[initialCapacity];
		this.size=0;
	}
	
	public int size() {
		return size;
	}
	
	public boolean isEmpty() {
		return size==0;
	}
	
	
	private void ensureCapacity(int minCapacity) {
        if (minCapacity > elements.length) {
            int newCapacity = elements.length * 2;
            if (newCapacity < minCapacity) {
                newCapacity = minCapacity;
            }
            elements = Arrays.copyOf(elements, newCapacity);
        }
    }
	
	public void add(T element) {
		ensureCapacity(size+1);
		elements[size++]=element;
	}
	
	@SuppressWarnings("unchecked")
	public T get(int index) {
		if(index<0||index>=size) {
			return (T) "IndexOut of Bounds!!!";
		}
		return (T) elements[index];
	}
	
	
	
	
	
}
