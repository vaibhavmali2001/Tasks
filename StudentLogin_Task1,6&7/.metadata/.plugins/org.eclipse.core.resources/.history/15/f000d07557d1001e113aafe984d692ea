package com.app.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.app.dto.LoginDto;
import com.app.dto.StudentDto;
import com.app.entity.Student;
import com.app.response.LoginMessage;
import com.app.service.EmailSenderService;
import com.app.service.StudentService;

@RestController
@CrossOrigin
@RequestMapping("/student")
public class StudentController {
	
	
	@Autowired
	private StudentService studentService;
	
	@Autowired
	EmailSenderService emailSenderService;
	
	//Add new Student
	@PostMapping(path="/save")
	public String saveStudent(@RequestBody StudentDto studentDto)
	{
		String id= studentService.addStudent(studentDto);
		return id;
	}
	
	//Login
	@PostMapping(path="/login")
	public ResponseEntity<?>loginStudent(@RequestBody LoginDto loginDto){
		LoginMessage loginmessage = studentService.loginStudent(loginDto);
		System.out.println("In Controller");
		return ResponseEntity.ok(loginmessage);
	}
	
	//See all Students
	@GetMapping(path="/all")
	public List<Student>getall(){
		return studentService.getall();
	}
	
	//Find by Name
	@GetMapping(path="/byname")
	public List<Student>byName(@RequestParam String firstName)
	{
		System.out.println("In findcontr");
		return studentService.byName(firstName);
	}
	
	//Delete By Id
	@DeleteMapping(path="/delete")
	public String DeleteStudent(@RequestParam Integer id) {
		String ans=studentService.removeStudent(id);
		return ans;
	}
	
	
	//Forgot password
	@GetMapping("/get-password/{email}")
	public ResponseEntity<?> getUserPassword(@PathVariable String email){
		Student st=studentService.getStudentByEmail(email);
		if(st==null) {
			return ResponseEntity.ok("student with this email doesnt exist");
		}
		else {
		String studentPassword=st.getPassword();
		String studentFirstName=st.getFirstName();
		emailSenderService.sendSimpleEmail(email, "Dear "+studentFirstName+",\r\n"
				+ "\r\n"
				+ "As requested, here is your password for accessing your account:\r\n"
				+ "\r\n"
				+ "Password:"+studentPassword+"\r\n"
				+ "\r\n"
				+ "We recommend that you change your password immediately after logging in for security purposes."
				+ "\r\n"
				+ "Thank you..\r\n"
				,"Your Login Password");
		return ResponseEntity.ok("password has sent to your email " +email);
		}
		
		}
	 @PostMapping("/forgot-password")
	    public String forgotPassword(@RequestParam String mobileNumber) {
	        String status= studentService.sendPassword(mobileNumber);
	        return status;
	    }
}
